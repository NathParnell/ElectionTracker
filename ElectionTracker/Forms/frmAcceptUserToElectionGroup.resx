<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAL8yAAC/MgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBAAQEBAELDAsFBQUFAQICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAoKCgAAAAAJPDw9bEFAQq02NjZmAAAACQgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAwMAAAAAA0JCQm6srKz0jo6P/6Kio/RLS0uHAAAAEA0NDQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMjJYqamp6/f39/+cnJz/6enp/8XFxfpYWFieAwMDGhwc
        HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCgoIAJSUlQ5iYmOD39/f/+/v7/52dnf/l5eX//////9PT
        0/5oaGi0Dw8PKEJCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH9/fwCXl5cANDQ0ABcXFzCHh4fQ8PDw///////9/f3/oaGh/+Dg
        4P///////////+Dg4P94eHjIGxsbOf///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq6urAOHh4QQpKSknd3d3vujo6P////////////7+
        /v+jo6P/3Nzc/////////////////+rq6v+JiYnZJycnTQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQAdnZ2NnZ2dsTd3d39////////
        /////////////6enp//W1tb///////////////////////Ly8v+amprmNDQ0YgAAAAUCAgIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKAAAAAAtbW1uYz8/P////
        ////////////////////////rKys/9DQ0P////////////////////////////j4+P+rq6vwQkJCegAA
        AAsICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQAAAAAFSEhIe8HB
        wfj///////////////////////////////+xsbH/y8vL//////////////////////////////////z8
        /P+8vLz3UFBQkgAAABQTExMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEAAAAAATo6
        OmSxsbHx/f39/////////////////////////////////7a2tv/FxcX/////////////////////////
        ///////////////////Nzc38Y2NkqRYVFiE4NzoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wAsLCxOoaGh5vr6+v//////////////////////////////////////urq7/7+/v///////////////
        /////////f39//T09P/m5ub/0NDQ/7y8vf+AgIH/KyosmQAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVVVUAHx8fOpCQkNn09PT////////////////////////////////////////////BwcL/tra3//Dw
        8P/c3Nz/xsbG/6+vr/+enp7/mJiY/5ycnP+rq6v/ubm6/3NzdeEhICNGdXR9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAALS0tABERESh/f3/I7Ozs/////////////////////////////Pz8/+fn5//T09P/vby9/4+P
        kf9/foD/mpqa/6Kiov+1tbX/y8vL/9/f3//w8PD/+fn5//z7/P+trK7tOjg8WgAAAAAEBAYAAAAAAAAA
        AAAAAAAAAAAAABsbGwACAgIbb29vtePj4/////////////////////////////39/f+0tLT/l5eX/6qp
        qv+9vb7/1dXW/+jo6P/19fX//v7+///////////////////////+/v7/urm79UJBRXEAAAADBQUHAAAA
        AAAAAAAAAAAAAAAAAAAPDw8AAAAAEGBgYJ/X19f+////////////////////////////////4+Lj/5mZ
        mf/29vb//////////////////////////////////////////////////////8nJyvtQT1KJAAAACAgH
        CgAAAAAAAAAAAAAAAAAAAAAACAgIAAAAAAhRUVGIycnJ+///////////////////////////////////
        ///X19j/p6an///////////////////////////////////////////////////////X19f+X15hoAAA
        ABAQDxIAAAAAAAAAAAAAAAAAAAAAAAMDAwAAAAADQkJCcLq6uvX+/v7//////////////////v7+////
        /////v///////9XU1f+qqar///7/////////////////////////////////////////////4+Pj/29u
        cbUDAgUbGxoeAAAAAAAAAAAAAAAAAAAAAAATExQAAAAAADk5OlmsrK3s/Pz8////////////////////
        ///9/f3/+/v7//f39//19fX/wsLD/62srf///////////////////////////////////////////+3s
        7f9/f4HJERETKS8uMgAAAAAAAAAAAAAAAAAAAAAAAAAAACQjJAAYFxgxd3d43s/P0P/Nzc7/w8PD/7q6
        uv+xsbH/qamp/6Kiov+enp7/mpqa/5qamv9/f3//rq6u////////////////////////////////////
        ///09PT/kI+S2R8eITpWVVoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgpACMjI1Bzc3P5q6qr/7Cv
        sP+4uLn/wcHB/8vLy//U1NT/3d3d/+Xl5f/s7Oz/9PT0/7+/v/+3t7f/////////////////////////
        ////////+vr6/6GgoucsKy5O////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmJSYAFRUWHGpq
        a7nZ2Nn/////////////////////////////////////////////////v7+//7y8vP//////////////
        //////////////39/f+xsbLxOjk8ZAAAAAIBAQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAlJSUACAgIH15eXqfKysr8/v7+//////////////////////////////////////+7u7v/wMDA////
        ////////////////////////wcHC+EhHSnwAAAAFBQQGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAREREAAAAAE09PT5C6urv3/Pz8/////////////////////////////////7W1
        tf/Hxsf//////////////////////9DP0P1XVlmTAAAADAsLDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwcAAAAAC0BAQHiqqqrw+Pj4////////////////////
        ////////sbGx/8nJyf/////////////////d3N3/ZmVoqgAAABUUFBYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAAAAABTMzM2GZmZnl8vLy////
        //////////////////+tra3/zs7O////////////6Ofo/3Z2eL8KCQwhIyElAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiYm
        JkuIiIjX6enp/////////////////6qqqv/T09P///////Dw8P+HhonRFxcaMT08QQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////ABoZGjd3d3fG397f////////////pqam/9jY2P/5+fn/mJeZ4CUkJ0OHhYwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAOzs7AA4ODidnZmez0tLS/f7+/v+jo6P/2tra/6uqrOwzMjVYAAAAAAAA
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRkaAAICAhlXV1ecwsLC+p+fn/+cm530RURIbwAA
        AAMEBAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMAAAAAA9LS0uFVVVW7Tw7
        PoYAAAAIBwYJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgkLAAsK
        DAwcGx5OFhUYFBcWGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//+P////B////gP///4B///8AP//+AB//+AAH//gAA//wAAH/4AAA/8A
        AAH/AAAA/gAAAfwAAAP4AAAD8AAAB+AAAA/AAAAfwAAAP4AAAH+AAAD/gAAA/8AAAf/gAAP/8AAH//gA
        D//8AB///wA///+Af///wH///+D////x//8=
</value>
  </data>
</root>